import React, { useState } from 'react';
import { Search, Plus, Edit, Trash2 } from 'lucide-react';
import './QuanLyPhongHoc.css';

const QuanLyPhongHoc = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [roomType, setRoomType] = useState('T·∫•t c·∫£');
  const [status, setStatus] = useState('T·∫•t c·∫£');

  const roomData = [
    {
      id: 'A101',
      name: 'Ph√≤ng h·ªçc A101',
      type: 'Ph√≤ng h·ªçc l√Ω thuy·∫øt',
      capacity: '50 ng∆∞·ªùi',
      equipment: 'M√°y chi·∫øu, b·∫£ng tr·∫Øng, h·ªá th·ªëng √¢m thanh',
      status: 'Ho·∫°t ƒë·ªông'
    },
    {
      id: 'B205',
      name: 'Ph√≤ng th√≠ nghi·ªám H√≥a h·ªçc',
      type: 'Ph√≤ng th√≠ nghi·ªám',
      capacity: '30 ng∆∞·ªùi',
      equipment: 'B√†n th√≠ nghi·ªám, t·ªß h√≥a ch·∫•t, h·ªá th·ªëng th√¥ng gi√≥',
      status: 'Ho·∫°t ƒë·ªông'
    },
    {
      id: 'C301',
      name: 'Ph√≤ng m√°y t√≠nh C301',
      type: 'Ph√≤ng m√°y t√≠nh',
      capacity: '40 ng∆∞·ªùi',
      equipment: '40 m√°y t√≠nh Dell, m√°y chi·∫øu, ƒëi·ªÅu h√≤a',
      status: 'B·∫£o tr√¨'
    },
    {
      id: 'D102',
      name: 'Ph√≤ng h·ªçp Ban Gi√°m hi·ªáu',
      type: 'Ph√≤ng h·ªçp',
      capacity: '20 ng∆∞·ªùi',
      equipment: 'B√†n h·ªçp, m√†n h√¨nh LED, h·ªá th·ªëng h·ªôi ngh·ªã tr·ª±c tuy·∫øn',
      status: 'Ho·∫°t ƒë·ªông'
    },
    {
      id: 'E203',
      name: 'Ph√≤ng th·ª±c h√†nh C∆° kh√≠',
      type: 'Ph√≤ng th·ª±c h√†nh',
      capacity: '25 ng∆∞·ªùi',
      equipment: 'M√°y ti·ªán, m√°y phay, d·ª•ng c·ª• ƒëo l∆∞·ªùng',
      status: 'Ng·ª´ng s·ª≠ d·ª•ng'
    }
  ];

  const getStatusBadgeClass = (status) => {
    switch (status) {
      case 'Ho·∫°t ƒë·ªông':
        return 'status-active';
      case 'B·∫£o tr√¨':
        return 'status-maintenance';
      case 'Ng·ª´ng s·ª≠ d·ª•ng':
        return 'status-inactive';
      default:
        return '';
    }
  };

  const getRoomTypeClass = (type) => {
    switch (type) {
      case 'Ph√≤ng h·ªçc l√Ω thuy·∫øt':
        return 'room-type-theory';
      case 'Ph√≤ng th√≠ nghi·ªám':
        return 'room-type-lab';
      case 'Ph√≤ng m√°y t√≠nh':
        return 'room-type-computer';
      case 'Ph√≤ng h·ªçp':
        return 'room-type-meeting';
      case 'Ph√≤ng th·ª±c h√†nh':
        return 'room-type-practice';
      default:
        return '';
    }
  };

  return (
    <div className="room-management">
      {/* Header */}
      <div className="header">
        <h1 className="page-title">Qu·∫£n l√Ω ph√≤ng h·ªçc</h1>
        <button className="add-button">
          <Plus size={18} />
          Th√™m ph√≤ng h·ªçc
        </button>
      </div>

      {/* Statistics Cards */}
      <div className="stats-grid">
        <div className="stat-card total">
          <div className="stat-icon">üìä</div>
          <div className="stat-content">
            <div className="stat-label">T·ªïng s·ªë ph√≤ng</div>
            <div className="stat-number">5</div>
          </div>
        </div>
        
        <div className="stat-card active">
          <div className="stat-icon">‚úì</div>
          <div className="stat-content">
            <div className="stat-label">ƒêang ho·∫°t ƒë·ªông</div>
            <div className="stat-number">3</div>
          </div>
        </div>
        
        <div className="stat-card maintenance">
          <div className="stat-icon">‚ö†</div>
          <div className="stat-content">
            <div className="stat-label">ƒêang b·∫£o tr√¨</div>
            <div className="stat-number">1</div>
          </div>
        </div>
        
        <div className="stat-card inactive">
          <div className="stat-icon">‚úï</div>
          <div className="stat-content">
            <div className="stat-label">Ng·ª´ng s·ª≠ d·ª•ng</div>
            <div className="stat-number">1</div>
          </div>
        </div>
      </div>

      {/* Filters */}
      <div className="filters">
        <div className="search-box">
          <Search size={20} className="search-icon" />
          <input
            type="text"
            placeholder="T√¨m theo m√£ ph√≤ng, t√™n ph√≤ng, thi·∫øt b·ªã..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="search-input"
          />
        </div>
        
        <div className="filter-group">
          <div className="filter-item">
            <label>Lo·∫°i ph√≤ng</label>
            <select value={roomType} onChange={(e) => setRoomType(e.target.value)}>
              <option value="T·∫•t c·∫£">T·∫•t c·∫£</option>
              <option value="Ph√≤ng h·ªçc l√Ω thuy·∫øt">Ph√≤ng h·ªçc l√Ω thuy·∫øt</option>
              <option value="Ph√≤ng th√≠ nghi·ªám">Ph√≤ng th√≠ nghi·ªám</option>
              <option value="Ph√≤ng m√°y t√≠nh">Ph√≤ng m√°y t√≠nh</option>
              <option value="Ph√≤ng h·ªçp">Ph√≤ng h·ªçp</option>
              <option value="Ph√≤ng th·ª±c h√†nh">Ph√≤ng th·ª±c h√†nh</option>
            </select>
          </div>
          
          <div className="filter-item">
            <label>Tr·∫°ng th√°i</label>
            <select value={status} onChange={(e) => setStatus(e.target.value)}>
              <option value="T·∫•t c·∫£">T·∫•t c·∫£</option>
              <option value="Ho·∫°t ƒë·ªông">Ho·∫°t ƒë·ªông</option>
              <option value="B·∫£o tr√¨">B·∫£o tr√¨</option>
              <option value="Ng·ª´ng s·ª≠ d·ª•ng">Ng·ª´ng s·ª≠ d·ª•ng</option>
            </select>
          </div>
        </div>
      </div>

      {/* Table */}
      <div className="table-container">
        <table className="rooms-table">
          <thead>
            <tr>
              <th>M√£ ph√≤ng</th>
              <th>T√™n ph√≤ng</th>
              <th>Lo·∫°i ph√≤ng</th>
              <th>S·ª©c ch·ª©a</th>
              <th>Thi·∫øt b·ªã c√≥ ƒë·ªãnh</th>
              <th>Tr·∫°ng th√°i</th>
              <th>H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            {roomData.map((room) => (
              <tr key={room.id}>
                <td className="room-id">{room.id}</td>
                <td className="room-name">{room.name}</td>
                <td>
                  <span className={`room-type ${getRoomTypeClass(room.type)}`}>
                    {room.type}
                  </span>
                </td>
                <td>{room.capacity}</td>
                <td className="equipment">{room.equipment}</td>
                <td>
                  <span className={`status-badge ${getStatusBadgeClass(room.status)}`}>
                    {room.status}
                  </span>
                </td>
                <td className="actions">
                  <button className="action-btn edit">
                    <Edit size={16} />
                  </button>
                  <button className="action-btn delete">
                    <Trash2 size={16} />
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default QuanLyPhongHoc;